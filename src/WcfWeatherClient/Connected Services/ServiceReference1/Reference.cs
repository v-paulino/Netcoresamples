//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    public partial class WeatherDetailsRequest : object
    {
        
        private string CountryCodeField;
        
        private bool FullDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FullDescription
        {
            get
            {
                return this.FullDescriptionField;
            }
            set
            {
                this.FullDescriptionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    public partial class WeatherDetailsResponse : object
    {
        
        private string DetailDescriptionField;
        
        private bool IsRainningField;
        
        private string TemperatureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailDescription
        {
            get
            {
                return this.DetailDescriptionField;
            }
            set
            {
                this.DetailDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRainning
        {
            get
            {
                return this.IsRainningField;
            }
            set
            {
                this.IsRainningField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temperature
        {
            get
            {
                return this.TemperatureField;
            }
            set
            {
                this.TemperatureField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWeatherService")]
    public interface IWeatherService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWheather", ReplyAction="http://tempuri.org/IWeatherService/GetWheatherResponse")]
        System.Threading.Tasks.Task<ServiceReference1.GetWheatherResponse> GetWheatherAsync(ServiceReference1.GetWheatherRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWheatherDetails", ReplyAction="http://tempuri.org/IWeatherService/GetWheatherDetailsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.GetWheatherDetailsResponse> GetWheatherDetailsAsync(ServiceReference1.GetWheatherDetailsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWheather", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWheatherRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string localtioncode;
        
        public GetWheatherRequest()
        {
        }
        
        public GetWheatherRequest(string localtioncode)
        {
            this.localtioncode = localtioncode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWheatherResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWheatherResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetWheatherResult;
        
        public GetWheatherResponse()
        {
        }
        
        public GetWheatherResponse(string GetWheatherResult)
        {
            this.GetWheatherResult = GetWheatherResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWheatherDetails", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWheatherDetailsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.WeatherDetailsRequest composite;
        
        public GetWheatherDetailsRequest()
        {
        }
        
        public GetWheatherDetailsRequest(ServiceReference1.WeatherDetailsRequest composite)
        {
            this.composite = composite;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWheatherDetailsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWheatherDetailsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.WeatherDetailsResponse GetWheatherDetailsResult;
        
        public GetWheatherDetailsResponse()
        {
        }
        
        public GetWheatherDetailsResponse(ServiceReference1.WeatherDetailsResponse GetWheatherDetailsResult)
        {
            this.GetWheatherDetailsResult = GetWheatherDetailsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IWeatherServiceChannel : ServiceReference1.IWeatherService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IWeatherService>, ServiceReference1.IWeatherService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WeatherServiceClient() : 
                base(WeatherServiceClient.GetDefaultBinding(), WeatherServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpEndpoint.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WeatherServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(WeatherServiceClient.GetBindingForEndpoint(endpointConfiguration), WeatherServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WeatherServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WeatherServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WeatherServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WeatherServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetWheatherResponse> GetWheatherAsync(ServiceReference1.GetWheatherRequest request)
        {
            return base.Channel.GetWheatherAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetWheatherDetailsResponse> GetWheatherDetailsAsync(ServiceReference1.GetWheatherDetailsRequest request)
        {
            return base.Channel.GetWheatherDetailsAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpEndpoint))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpEndpoint))
            {
                return new System.ServiceModel.EndpointAddress("http://20.229.113.2/WeatherService/WeatherService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WeatherServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpEndpoint);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WeatherServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpEndpoint);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpEndpoint,
        }
    }
}
